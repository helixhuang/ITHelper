<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>